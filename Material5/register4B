#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1e9d6e0 .scope module, "testbench" "testbench" 2 1;
 .timescale 0 0;
v0x1eb9510_0 .net "clk", 0 0, v0x1eb9100_0; 1 drivers
v0x1eb95e0_0 .net "d", 3 0, v0x1eb91a0_0; 1 drivers
v0x1eb96b0_0 .net "dir", 0 0, v0x1eb9250_0; 1 drivers
v0x1eb9780_0 .net "enb", 0 0, v0x1eb9300_0; 1 drivers
v0x1eb9850_0 .net "mode", 1 0, v0x1eb93e0_0; 1 drivers
v0x1eb9920_0 .net "q", 3 0, v0x1eb8da0_0; 1 drivers
v0x1eb99e0_0 .net "s_in", 0 0, v0x1eb9490_0; 1 drivers
v0x1eb9ab0_0 .net "s_out", 0 0, v0x1eb8f20_0; 1 drivers
S_0x1eb9010 .scope module, "tst1" "tester" 2 7, 3 1, S_0x1e9d6e0;
 .timescale 0 0;
v0x1eb9100_0 .var "clk", 0 0;
v0x1eb91a0_0 .var "d", 3 0;
v0x1eb9250_0 .var "dir", 0 0;
v0x1eb9300_0 .var "enb", 0 0;
v0x1eb93e0_0 .var "mode", 1 0;
v0x1eb9490_0 .var "s_in", 0 0;
S_0x1e9d7d0 .scope module, "reg1" "reg_desp" 2 8, 4 1, S_0x1e9d6e0;
 .timescale 0 0;
v0x1e9d8c0_0 .alias "clk", 0 0, v0x1eb9510_0;
v0x1eb8b10_0 .alias "d", 3 0, v0x1eb95e0_0;
v0x1eb8bb0_0 .alias "dir", 0 0, v0x1eb96b0_0;
v0x1eb8c50_0 .alias "enb", 0 0, v0x1eb9780_0;
v0x1eb8d00_0 .alias "mode", 1 0, v0x1eb9850_0;
v0x1eb8da0_0 .var "q", 3 0;
v0x1eb8e80_0 .alias "s_in", 0 0, v0x1eb99e0_0;
v0x1eb8f20_0 .var "s_out", 0 0;
E_0x1e8e1c0 .event posedge, v0x1e9d8c0_0;
    .scope S_0x1eb9010;
T_0 ;
    %delay 5, 0;
    %load/v 8, v0x1eb9100_0, 1;
    %inv 8, 1;
    %set/v v0x1eb9100_0, 8, 1;
    %jmp T_0;
    .thread T_0;
    .scope S_0x1eb9010;
T_1 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9100_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9300_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9250_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9490_0, 0, 1;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 0;
    %vpi_call 3 18 "$display", "Inicia prueba #5, carga en paralelo";
    %movi 8, 2, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9300_0, 0, 1;
    %movi 8, 10, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb91a0_0, 0, 8;
    %delay 10, 0;
    %vpi_call 3 24 "$display", "Inicia prueba #1, rotacion a la izquierda";
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 0;
    %delay 40, 0;
    %vpi_call 3 28 "$display", "Inicia prueba #5, carga en paralelo";
    %movi 8, 2, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 8;
    %movi 8, 10, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb91a0_0, 0, 8;
    %delay 10, 0;
    %vpi_call 3 33 "$display", "Inicia prueba #2, rotacion a la derecha";
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9250_0, 0, 1;
    %delay 40, 0;
    %vpi_call 3 38 "$display", "Inicia prueba #5, carga en paralelo";
    %movi 8, 2, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 8;
    %movi 8, 1, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb91a0_0, 0, 8;
    %delay 10, 0;
    %vpi_call 3 43 "$display", "Inicia prueba #3, rotacion circular a la izquierda";
    %movi 8, 1, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9250_0, 0, 0;
    %delay 40, 0;
    %vpi_call 3 48 "$display", "Inicia prueba #4, rotacion circular a la derecha";
    %movi 8, 1, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1eb93e0_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb9250_0, 0, 1;
    %delay 40, 0;
    %vpi_call 3 51 "$finish";
    %end;
    .thread T_1;
    .scope S_0x1e9d7d0;
T_2 ;
    %wait E_0x1e8e1c0;
    %load/v 8, v0x1eb8c50_0, 1;
    %jmp/0xz  T_2.0, 8;
    %load/v 8, v0x1eb8d00_0, 2;
    %cmpi/u 8, 0, 2;
    %jmp/0xz  T_2.2, 4;
    %load/v 8, v0x1eb8bb0_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_2.4, 4;
    %load/v 8, v0x1eb8e80_0, 1;
    %load/v 9, v0x1eb8da0_0, 3; Select 3 out of 4 bits
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb8da0_0, 0, 8;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.6, 4;
    %load/x1p 8, v0x1eb8da0_0, 1;
    %jmp T_2.7;
T_2.6 ;
    %mov 8, 2, 1;
T_2.7 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb8f20_0, 0, 8;
    %jmp T_2.5;
T_2.4 ;
    %load/v 8, v0x1eb8bb0_0, 1;
    %jmp/0xz  T_2.8, 8;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.10, 4;
    %load/x1p 12, v0x1eb8da0_0, 3;
    %jmp T_2.11;
T_2.10 ;
    %mov 12, 2, 3;
T_2.11 ;
    %mov 8, 12, 3; Move signal select into place
    %load/v 11, v0x1eb8e80_0, 1;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb8da0_0, 0, 8;
    %load/v 8, v0x1eb8da0_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb8f20_0, 0, 8;
T_2.8 ;
T_2.5 ;
    %jmp T_2.3;
T_2.2 ;
    %load/v 8, v0x1eb8d00_0, 2;
    %cmpi/u 8, 1, 2;
    %jmp/0xz  T_2.12, 4;
    %load/v 8, v0x1eb8bb0_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_2.14, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb8f20_0, 0, 0;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.16, 4;
    %load/x1p 12, v0x1eb8da0_0, 1;
    %jmp T_2.17;
T_2.16 ;
    %mov 12, 2, 1;
T_2.17 ;
    %mov 8, 12, 1; Move signal select into place
    %load/v 9, v0x1eb8da0_0, 3; Select 3 out of 4 bits
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb8da0_0, 0, 8;
    %jmp T_2.15;
T_2.14 ;
    %load/v 8, v0x1eb8bb0_0, 1;
    %jmp/0xz  T_2.18, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb8f20_0, 0, 0;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.20, 4;
    %load/x1p 12, v0x1eb8da0_0, 3;
    %jmp T_2.21;
T_2.20 ;
    %mov 12, 2, 3;
T_2.21 ;
    %mov 8, 12, 3; Move signal select into place
    %load/v 11, v0x1eb8da0_0, 1; Select 1 out of 4 bits
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb8da0_0, 0, 8;
T_2.18 ;
T_2.15 ;
    %jmp T_2.13;
T_2.12 ;
    %load/v 8, v0x1eb8d00_0, 2;
    %cmpi/u 8, 2, 2;
    %jmp/0xz  T_2.22, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1eb8f20_0, 0, 0;
    %load/v 8, v0x1eb8b10_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1eb8da0_0, 0, 8;
T_2.22 ;
T_2.13 ;
T_2.3 ;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
    .scope S_0x1e9d6e0;
T_3 ;
    %vpi_call 2 13 "$dumpfile", "register.vcd";
    %vpi_call 2 14 "$dumpvars";
    %vpi_call 2 15 "$display", "time\011 clk enb dir mode d s_in q s_out";
    %vpi_call 2 16 "$monitor", "%g\011    %b  %b  %b  %b %b %b %b  %b", $time, v0x1eb9510_0, v0x1eb9780_0, v0x1eb96b0_0, v0x1eb9850_0, v0x1eb95e0_0, v0x1eb99e0_0, v0x1eb9920_0, v0x1eb9ab0_0;
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "register4B_tb.v";
    "tester4B.v";
    "register4B.v";
